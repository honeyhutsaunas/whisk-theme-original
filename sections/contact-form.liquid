{%- liquid
  if section.settings.edge_style contains "top"
    assign padding_classes = 'space--pt--small space--pb--xlarge'
  elsif section.settings.edge_style contains "bottom"
    assign padding_classes = 'space--pt--xlarge space--pb--medium'
  else
    assign padding_classes = 'space--pv--xlarge'
  endif
-%}

<div class="contact-form color--underneath-{{ section.settings.background_color_scheme }}">
  {%- if section.settings.edge_style contains "top" -%}
    <div class="element--edge-wrapper">
      <div class="element--{{ section.settings.edge_style }} color--bg-{{ section.settings.color_scheme }}"></div>
    </div>
  {%- endif -%}
  <div class="color--bg-{{ section.settings.color_scheme }} {{ padding_classes }}">
    <div class="space--viewport-sides">
      <div class="container--copy-max-width align--block-center">
        {%- if section.settings.heading or section.settings.text -%}
          <header class="space--mb--medium space--viewport-sides">
            {%- if section.settings.heading -%}
              <h2 class="type--heading title--{{ section.settings.heading_size }} align--text-center">
                {{ section.settings.heading | escape }}
              </h2>
            {%- endif -%}
            {%- unless section.settings.text == blank -%}
              <div class="container--copy-max-width rte copy--{{ section.settings.text_size }} space--mt--small align--text-center align--block-center">
                {{ section.settings.text }}
              </div>
            {%- endunless -%}
          </header>
        {%- endif -%}

        {%- form 'contact', id: 'ContactForm' -%}
          {%- if form.posted_successfully? -%}
            <div class="space--mb--medium form-message">
              <h2 class="form-message__focusable-title success" tabindex="-1" autofocus>
                {%- render 'icons', icon: 'success', class: ' space--mr--xsmall form-message__icon' -%}
                {{ 'contact.post_success' | t }}
              </h2>
            </div>
          {%- elsif form.errors -%}
            <div class="space--mb--medium form-message">
              <h2 role="alert" tabindex="-1" autofocus class="form-message__focusable-title space--mb--small">
                {%- render 'icons', icon: 'error', class: 'space--mr--xsmall form-message__icon' -%}
                {{ 'contact.error_heading' | t }}
              </h2>
              <ul>
                <li>
                  <a href="#ContactForm-email">
                    {{ form.errors.translated_fields['email'] | capitalize }} {{ form.errors.messages['email'] }}
                  </a>
                </li>
              </ul>
            </div>
          {%- endif -%}
          <div class="grid--2-columns space--gap--small grid--reset--small-down">
            <div>
              <label class="space--mb--xsmall space--mt--medium" for="ContactForm-name">
                {{ 'contact.name' | t }}
              </label>
              <input autocomplete="name" type="text" id="ContactForm-name" name="contact[{{ 'contact.name' | t }}]" value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.name }}{% endif %}" placeholder="{{ 'contact.name' | t }}">
            </div>
            <div>
              <label class="space--mb--xsmall space--mt--medium" for="ContactForm-email">
                {{ 'contact.email' | t }} <span aria-hidden="true">*</span>
              </label>
              <input
                autocomplete="email"
                type="email"
                id="ContactForm-email"
                name="contact[email]"
                spellcheck="false"
                autocapitalize="off"
                value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
                aria-required="true"
                {% if form.errors contains 'email' %}
                  aria-invalid="true"
                  aria-describedby="ContactForm-email-error"
                {% endif %}
                placeholder="{{ 'contact.email' | t }}"
                required
              >
            </div>
          </div>
          <label class="space--mb--xsmall space--mt--medium" for="ContactForm-body">
            {{ 'contact.comment' | t }} <span aria-hidden="true">*</span>
          </label>
          <textarea
            rows="10"
            id="ContactForm-body"
            name="contact[{{ 'contact.comment' | t }}]"
            placeholder="{{ 'contact.comment' | t }}"
            required
          >
            {{- form.body -}}
          </textarea>
          <button type="submit" class="button align--block-center space--mt--large">
            {{ 'contact.send' | t }}
          </button>
        {%- endform -%}
      </div>
    </div>
  </div>
  {%- if section.settings.edge_style contains "bottom" -%}
    <div class="element--edge-wrapper">
      <div class="element--{{ section.settings.edge_style }} color--bg-{{ section.settings.color_scheme }}"></div>
    </div>
  {%- endif -%}
</div>

{% schema %}
{
  "name": "t:contact_form.name",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "t:heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "large",
          "label": "t:heading.settings.heading_size.option_large"
        },
        {
          "value": "medium",
          "label": "t:heading.settings.heading_size.option_medium"
        },
        {
          "value": "small",
          "label": "t:heading.settings.heading_size.option_small"
        }
      ],
      "default": "medium",
      "label": "t:heading.settings.heading_size.label"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "t:text.label"
    },
    {
      "type": "select",
      "id": "text_size",
      "options": [
        {
          "value": "large",
          "label": "t:text.settings.text_size.option_large"
        },
        {
          "value": "medium",
          "label": "t:text.settings.text_size.option_medium"
        },
        {
          "value": "small",
          "label": "t:text.settings.text_size.option_small"
        },
        {
          "value": "xsmall",
          "label": "t:text.settings.text_size.option_xsmall"
        }
      ],
      "default": "medium",
      "label": "t:text.settings.text_size.label"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "default",
          "label": "t:color_scheme.option_default"
        },
        {
          "value": "inverse",
          "label": "t:color_scheme.option_inverse"
        },
        {
          "value": "primary",
          "label": "t:color_scheme.option_accent_1"
        },
        {
          "value": "secondary",
          "label": "t:color_scheme.option_accent_2"
        },
        {
          "value": "tertiary",
          "label": "t:color_scheme.option_accent_3"
        },
        {
          "value": "quaternary",
          "label": "t:color_scheme.option_accent_4"
        },
        {
          "value": "quinary",
          "label": "t:color_scheme.option_accent_5"
        },
        {
          "value": "senary",
          "label": "t:color_scheme.option_accent_6"
        }
      ],
      "default": "secondary",
      "label": "t:color_scheme.label"
    },
    {
      "type": "header",
      "content": "Borders"
    },
    {
      "type": "paragraph",
      "content": "Border shapes apply only if the section is full width."
    },
    {
      "type": "select",
      "id": "edge_style",
      "options": [
        {
          "value": "edge-solid-angle-top-up",
          "label": "t:borders.settings.border_style.option_angled_up_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-angle-top-down",
          "label": "t:borders.settings.border_style.option_angled_down_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-waves-angle-top-up",
          "label": "t:borders.settings.border_style.option_waves_angled_up_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-waves-angle-top-down",
          "label": "t:borders.settings.border_style.option_waves_angled_down_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-even-waves-top-1",
          "label": "t:borders.settings.border_style.option_even_waves_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-even-waves-top-1-reverse",
          "label": "t:borders.settings.border_style.option_even_waves_reverse_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-uneven-waves-top-1",
          "label": "t:borders.settings.border_style.option_uneven_waves_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-uneven-waves-top-1-reverse",
          "label": "t:borders.settings.border_style.option_uneven_waves_reverse_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-angle-bottom-up",
          "label": "t:borders.settings.border_style.option_angled_up_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-angle-bottom-down",
          "label": "t:borders.settings.border_style.option_angled_down_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-waves-angle-bottom-up",
          "label": "t:borders.settings.border_style.option_waves_angled_up_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-waves-angle-bottom-down",
          "label": "t:borders.settings.border_style.option_waves_angled_down_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-even-waves-bottom-1",
          "label": "t:borders.settings.border_style.option_even_waves_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-even-waves-bottom-1-reverse",
          "label": "t:borders.settings.border_style.option_even_waves_reverse_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-uneven-waves-bottom-1",
          "label": "t:borders.settings.border_style.option_uneven_waves_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-uneven-waves-bottom-1-reverse",
          "label": "t:borders.settings.border_style.option_uneven_waves_reverse_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-center-point-bottom",
          "label": "t:borders.settings.border_style.option_center_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-center-pinch-bottom",
          "label": "t:borders.settings.border_style.option_pinch_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "none",
          "label": "t:borders.settings.border_style.option_none"
        }
      ],
      "default": "none",
      "label": "t:borders.settings.border_style.label"
    },
    {
      "type": "select",
      "id": "background_color_scheme",
      "options": [
        {
          "value": "default",
          "label": "t:color_scheme.option_default"
        },
        {
          "value": "inverse",
          "label": "t:color_scheme.option_inverse"
        },
        {
          "value": "primary",
          "label": "t:color_scheme.option_accent_1"
        },
        {
          "value": "secondary",
          "label": "t:color_scheme.option_accent_2"
        },
        {
          "value": "tertiary",
          "label": "t:color_scheme.option_accent_3"
        },
        {
          "value": "quaternary",
          "label": "t:color_scheme.option_accent_4"
        },
        {
          "value": "quinary",
          "label": "t:color_scheme.option_accent_5"
        },
        {
          "value": "senary",
          "label": "t:color_scheme.option_accent_6"
        },
        {
          "value": "site-header-bg",
          "label": "t:color_scheme.option_header_bg"
        },
        {
          "value": "site-footer-bg",
          "label": "t:color_scheme.option_footer_bg"
        }
      ],
      "default": "default",
      "label": "t:borders.settings.background_color_scheme.label",
      "info": "t:borders.settings.background_color_scheme.info"
    }
  ],
  "presets": [
    {
      "name": "t:contact_form.name"
    }
  ]
}
{% endschema %}
