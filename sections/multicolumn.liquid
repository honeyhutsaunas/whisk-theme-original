{%- liquid
  if section.settings.edge_style contains "top"
    assign padding_classes = 'space--pt--medium space--pb--xlarge'
  elsif section.settings.edge_style contains "bottom"
    assign padding_classes = 'space--pt--xlarge space--pb--medium'
  else
    assign padding_classes = 'space--pv--xlarge'
  endif
-%}

<div class="multicolumn multicolumn--{{ section.id }} color--underneath-{{ section.settings.background_color_scheme }}">
  {%- if section.settings.edge_style contains "top" -%}
    <div class="element--edge-wrapper">
      <div class="element--{{ section.settings.edge_style }} color--bg-{{ section.settings.color_scheme }}"></div>
    </div>
  {%- endif -%}
  <div class="color--bg-{{ section.settings.color_scheme }} {{ padding_classes }}">
    <div class="container--page">
      {%- if section.settings.heading != blank -%}
        <h2 class="type--heading title--{{ section.settings.heading_size }} align--text-center space--viewport-sides">
          {{ section.settings.heading | escape }}
        </h2>
      {%- endif -%}
      {%- unless section.settings.text == blank -%}
        <div class="container--copy-max-width rte copy--{{ section.settings.text_size }} space--mt--small align--text-center align--block-center space--viewport-sides">
          {{ section.settings.text }}
        </div>
      {%- endunless -%}

      <ul class="grid--{{ section.settings.columns_desktop }}-columns grid--{{ section.settings.columns_mobile }}-columns--medium-down list--unstyled {% unless section.settings.heading == blank and section.settings.text == blank %}space--mt--large{% endunless %}">
        {%- liquid
          assign highest_ratio = 0
          for block in section.blocks
            if block.settings.image.aspect_ratio > highest_ratio
              assign highest_ratio = block.settings.image.aspect_ratio
            endif
          endfor
        -%}
        {%- for block in section.blocks -%}
          {%- assign empty_column = '' -%}
          {%- if block.settings.image == blank and block.settings.title == blank and block.settings.text == blank and block.settings.link_label == blank -%}
            {%- assign empty_column = ' multicolumn-list__item--empty' -%}
          {%- endif -%}
          <li class="multicolumn__item multicolumn__item--{{ section.id }}-{{ block.id }} {% if block.settings.align_text_center %}align--text-center{% endif %} {{ empty_column }} container--copy-max-width align--block-center element--full-width" {{ block.shopify_attributes }}>
            <div class="multicolumn__content flex flex--column space--gap--small">
              {%- if block.settings.image != blank -%}
                <style>
                  .multicolumn__item--{{ section.id }}-{{ block.id }} .multicolumn__item-image-container {
                    max-width: {{ block.settings.image_max_width }}px;
                    height: 100%;
                    width: 100%;
                  }

                  {% if block.settings.shape == '' %}
                    .multicolumn__item--{{ section.id }}-{{ block.id }} .element--shape-container {
                      padding-top: {{ 1 | divided_by: block.settings.image.aspect_ratio | times: 100 }}%;
                    }

                    @supports (aspect-ratio: 1) {
                      .multicolumn__item--{{ section.id }}-{{ block.id }} .element--shape-container {
                        aspect-ratio: {{ block.settings.image.aspect_ratio }};
                        padding-top: 0;
                      }
                    }
                  {% endif %}
                </style>
                <div class="multicolumn__item-image-container space--mb--small {% if block.settings.align_text_center %}align--block-center{% endif %}">
                  <div class="element--shape-container element--{{ block.settings.shape }} fade-in-image">
                    {% capture image_sizes %}(min-width: 768px) {% if section.settings.columns_desktop == 1 %}90vw{% elsif section.settings.columns_desktop == 2 %}50vw{% else %}40vw{% endif %}, 100vw{% endcapture %}
                    {{ block.settings.image | image_url: width: 1500 | image_tag:
                      loading: 'lazy',
                      sizes: image_sizes,
                      widths: '375, 550, 720, 990, 1200, 1500',
                      class: 'multicolumn__item-image object-fit__image--cover'
                    }}
                  </div>
                </div>
              {%- endif -%}
              {%- if block.settings.heading != blank -%}
                <h3 class="type--heading title--{{ section.settings.column_title_size }}">
                  {{ block.settings.heading | escape }}
                </h3>
              {%- endif -%}
              {%- if block.settings.text != blank -%}
                <div class="rte copy--{{ section.settings.column_text_size }}">
                  {{ block.settings.text }}
                </div>
              {%- endif -%}
            </div>
          </li>
        {%- endfor -%}
      </ul>
    </div>
  </div>
  {%- if section.settings.edge_style contains "bottom" -%}
    <div class="element--edge-wrapper">
      <div class="element--{{ section.settings.edge_style }} color--bg-{{ section.settings.color_scheme }}"></div>
    </div>
  {%- endif -%}
</div>

{% schema %}
{
  "name": "t:multicolumn.name",
  "class": "section",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "Multicolumn",
      "label": "t:heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "large",
          "label": "t:heading.settings.heading_size.option_large"
        },
        {
          "value": "medium",
          "label": "t:heading.settings.heading_size.option_medium"
        },
        {
          "value": "small",
          "label": "t:heading.settings.heading_size.option_small"
        }
      ],
      "default": "large",
      "label": "t:heading.settings.heading_size.label"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "t:text.label"
    },
    {
      "type": "select",
      "id": "text_size",
      "options": [
        {
          "value": "large",
          "label": "t:text.settings.text_size.option_large"
        },
        {
          "value": "medium",
          "label": "t:text.settings.text_size.option_medium"
        },
        {
          "value": "small",
          "label": "t:text.settings.text_size.option_small"
        },
        {
          "value": "xsmall",
          "label": "t:text.settings.text_size.option_xsmall"
        }
      ],
      "default": "medium",
      "label": "t:text.settings.text_size.label"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "default",
          "label": "t:color_scheme.option_default"
        },
        {
          "value": "inverse",
          "label": "t:color_scheme.option_inverse"
        },
        {
          "value": "primary",
          "label": "t:color_scheme.option_accent_1"
        },
        {
          "value": "secondary",
          "label": "t:color_scheme.option_accent_2"
        },
        {
          "value": "tertiary",
          "label": "t:color_scheme.option_accent_3"
        },
        {
          "value": "quaternary",
          "label": "t:color_scheme.option_accent_4"
        },
        {
          "value": "quinary",
          "label": "t:color_scheme.option_accent_5"
        },
        {
          "value": "senary",
          "label": "t:color_scheme.option_accent_6"
        }
      ],
      "default": "secondary",
      "label": "t:color_scheme.label"
    },
    {
      "type": "header",
      "content": "t:multicolumn.settings.column_settings.content"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "t:multicolumn.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1",
      "label": "t:multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "select",
      "id": "column_title_size",
      "options": [
        {
          "value": "large",
          "label": "t:heading.settings.heading_size.option_large"
        },
        {
          "value": "medium",
          "label": "t:heading.settings.heading_size.option_medium"
        },
        {
          "value": "small",
          "label": "t:heading.settings.heading_size.option_small"
        }
      ],
      "default": "small",
      "label": "t:multicolumn.settings.column_title_size.label"
    },
    {
      "type": "select",
      "id": "column_text_size",
      "options": [
        {
          "value": "large",
          "label": "t:text.settings.text_size.option_large"
        },
        {
          "value": "medium",
          "label": "t:text.settings.text_size.option_medium"
        },
        {
          "value": "small",
          "label": "t:text.settings.text_size.option_small"
        }
      ],
      "default": "medium",
      "label": "t:multicolumn.settings.column_text_size.label"
    },
    {
      "type": "header",
      "content": "t:borders.name"
    },
    {
      "type": "select",
      "id": "edge_style",
      "options": [
        {
          "value": "edge-solid-angle-top-up",
          "label": "t:borders.settings.border_style.option_angled_up_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-angle-top-down",
          "label": "t:borders.settings.border_style.option_angled_down_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-waves-angle-top-up",
          "label": "t:borders.settings.border_style.option_waves_angled_up_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-waves-angle-top-down",
          "label": "t:borders.settings.border_style.option_waves_angled_down_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-even-waves-top-1",
          "label": "t:borders.settings.border_style.option_even_waves_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-even-waves-top-1-reverse",
          "label": "t:borders.settings.border_style.option_even_waves_reverse_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-uneven-waves-top-1",
          "label": "t:borders.settings.border_style.option_uneven_waves_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-uneven-waves-top-1-reverse",
          "label": "t:borders.settings.border_style.option_uneven_waves_reverse_top",
          "group": "t:borders.settings.border_style.group_top"
        },
        {
          "value": "edge-solid-angle-bottom-up",
          "label": "t:borders.settings.border_style.option_angled_up_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-angle-bottom-down",
          "label": "t:borders.settings.border_style.option_angled_down_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-waves-angle-bottom-up",
          "label": "t:borders.settings.border_style.option_waves_angled_up_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-waves-angle-bottom-down",
          "label": "t:borders.settings.border_style.option_waves_angled_down_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-even-waves-bottom-1",
          "label": "t:borders.settings.border_style.option_even_waves_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-even-waves-bottom-1-reverse",
          "label": "t:borders.settings.border_style.option_even_waves_reverse_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-uneven-waves-bottom-1",
          "label": "t:borders.settings.border_style.option_uneven_waves_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-uneven-waves-bottom-1-reverse",
          "label": "t:borders.settings.border_style.option_uneven_waves_reverse_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-center-point-bottom",
          "label": "t:borders.settings.border_style.option_center_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "edge-solid-center-pinch-bottom",
          "label": "t:borders.settings.border_style.option_pinch_bottom",
          "group": "t:borders.settings.border_style.group_bottom"
        },
        {
          "value": "none",
          "label": "t:borders.settings.border_style.option_none"
        }
      ],
      "default": "none",
      "label": "t:borders.settings.border_style.label"
    },
    {
      "type": "select",
      "id": "background_color_scheme",
      "options": [
        {
          "value": "default",
          "label": "t:color_scheme.option_default"
        },
        {
          "value": "inverse",
          "label": "t:color_scheme.option_inverse"
        },
        {
          "value": "primary",
          "label": "t:color_scheme.option_accent_1"
        },
        {
          "value": "secondary",
          "label": "t:color_scheme.option_accent_2"
        },
        {
          "value": "tertiary",
          "label": "t:color_scheme.option_accent_3"
        },
        {
          "value": "quaternary",
          "label": "t:color_scheme.option_accent_4"
        },
        {
          "value": "quinary",
          "label": "t:color_scheme.option_accent_5"
        },
        {
          "value": "senary",
          "label": "t:color_scheme.option_accent_6"
        },
        {
          "value": "site-header-bg",
          "label": "t:color_scheme.option_header_bg"
        },
        {
          "value": "site-footer-bg",
          "label": "t:color_scheme.option_footer_bg"
        }
      ],
      "default": "default",
      "label": "t:borders.settings.background_color_scheme.label",
      "info": "t:borders.settings.background_color_scheme.info"
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "t:multicolumn.blocks.column.name",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:image.label"
        },
        {
          "type": "range",
          "id": "image_max_width",
          "min": 50,
          "max": 800,
          "step": 25,
          "unit": "px",
          "label": "t:image.settings.max_width.label",
          "default": 100
        },
        {
          "type": "select",
          "id": "shape",
          "options": [
            {
              "value": "",
              "label": "t:image_shape.option_none"
            },
            {
              "value": "square",
              "label": "t:image_shape.option_square"
            },
            {
              "value": "landscape",
              "label": "t:image_shape.option_landscape"
            },
            {
              "value": "portrait",
              "label": "t:image_shape.option_portrait"
            },
            {
              "value": "hexagon",
              "label": "t:image_shape.option_hexagon"
            },
            {
              "value": "circle",
              "label": "t:image_shape.option_circle"
            },
            {
              "value": "arch",
              "label": "t:image_shape.option_arch"
            },
            {
              "value": "triangle-up",
              "label": "t:image_shape.option_triangle_up"
            },
            {
              "value": "triangle-down",
              "label": "t:image_shape.option_triangle_down"
            },
            {
              "value": "diamond",
              "label": "t:image_shape.option_diamond"
            },
            {
              "value": "flower",
              "label": "t:image_shape.option_flower"
            }
          ],
          "default": "",
          "label": "t:image_shape.label"
        },
        {
          "type": "text",
          "id": "heading",
          "default": "Column",
          "label": "t:heading.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
          "label": "t:text.label"
        },
        {
          "type": "checkbox",
          "id": "align_text_center",
          "default": false,
          "label": "t:text.settings.text_alignment.label_center_checkbox"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:multicolumn.name",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
